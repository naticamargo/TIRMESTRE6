/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package edu.co.sena.negocio.example;

import java.math.*;
import java.util.Date;
import java.util.Collection;
import edu.co.sena.dao.ItemCarritoDao;
import edu.co.sena.dto.ItemCarrito;
import edu.co.sena.exceptions.ItemCarritoDaoException;
import edu.co.sena.factory.ItemCarritoDaoFactory;

public class ItemCarritoDaoSample
{
	/**
	 * Method 'main'
	 * 
	 * @param arg
	 * @throws Exception
	 */
	public static void main(String[] arg) throws Exception
	{
		// Uncomment one of the lines below to test the generated code
		
		// findAll();
		// findByProducto("");
		// findByCarritoCompras("");
		// findWhereCantidadEquals(0);
		// findWhereValorUnitarioEquals(0);
		// findWhereValorTotalEquals(0);
		// findWhereProductoIdProductoEquals("");
		// findWhereCarritoComprasIdcarritoEquals("");
	}

	/**
	 * Method 'findAll'
	 * 
	 */
	public static void findAll()
	{
		try {
			ItemCarritoDao _dao = getItemCarritoDao();
			ItemCarrito _result[] = _dao.findAll();
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findByProducto'
	 * 
	 * @param productoIdProducto
	 */
	public static void findByProducto(String productoIdProducto)
	{
		try {
			ItemCarritoDao _dao = getItemCarritoDao();
			ItemCarrito _result[] = _dao.findByProducto(productoIdProducto);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findByCarritoCompras'
	 * 
	 * @param carritoComprasIdcarrito
	 */
	public static void findByCarritoCompras(String carritoComprasIdcarrito)
	{
		try {
			ItemCarritoDao _dao = getItemCarritoDao();
			ItemCarrito _result[] = _dao.findByCarritoCompras(carritoComprasIdcarrito);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereCantidadEquals'
	 * 
	 * @param cantidad
	 */
	public static void findWhereCantidadEquals(int cantidad)
	{
		try {
			ItemCarritoDao _dao = getItemCarritoDao();
			ItemCarrito _result[] = _dao.findWhereCantidadEquals(cantidad);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereValorUnitarioEquals'
	 * 
	 * @param valorUnitario
	 */
	public static void findWhereValorUnitarioEquals(float valorUnitario)
	{
		try {
			ItemCarritoDao _dao = getItemCarritoDao();
			ItemCarrito _result[] = _dao.findWhereValorUnitarioEquals(valorUnitario);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereValorTotalEquals'
	 * 
	 * @param valorTotal
	 */
	public static void findWhereValorTotalEquals(float valorTotal)
	{
		try {
			ItemCarritoDao _dao = getItemCarritoDao();
			ItemCarrito _result[] = _dao.findWhereValorTotalEquals(valorTotal);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereProductoIdProductoEquals'
	 * 
	 * @param productoIdProducto
	 */
	public static void findWhereProductoIdProductoEquals(String productoIdProducto)
	{
		try {
			ItemCarritoDao _dao = getItemCarritoDao();
			ItemCarrito _result[] = _dao.findWhereProductoIdProductoEquals(productoIdProducto);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereCarritoComprasIdcarritoEquals'
	 * 
	 * @param carritoComprasIdcarrito
	 */
	public static void findWhereCarritoComprasIdcarritoEquals(String carritoComprasIdcarrito)
	{
		try {
			ItemCarritoDao _dao = getItemCarritoDao();
			ItemCarrito _result[] = _dao.findWhereCarritoComprasIdcarritoEquals(carritoComprasIdcarrito);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'getItemCarritoDao'
	 * 
	 * @return ItemCarritoDao
	 */
	public static ItemCarritoDao getItemCarritoDao()
	{
		return ItemCarritoDaoFactory.create();
	}

	/**
	 * Method 'display'
	 * 
	 * @param dto
	 */
	public static void display(ItemCarrito dto)
	{
		StringBuffer buf = new StringBuffer();
		buf.append( dto.getCantidad() );
		buf.append( ", " );
		buf.append( dto.getValorUnitario() );
		buf.append( ", " );
		buf.append( dto.getValorTotal() );
		buf.append( ", " );
		buf.append( dto.getProductoIdProducto() );
		buf.append( ", " );
		buf.append( dto.getCarritoComprasIdcarrito() );
		System.out.println( buf.toString() );
	}

}
