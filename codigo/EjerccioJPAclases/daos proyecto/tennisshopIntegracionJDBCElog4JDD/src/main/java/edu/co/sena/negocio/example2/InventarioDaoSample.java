/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package edu.co.sena.negocio.example2;

import edu.co.sena.negocio.example.*;
import java.math.*;
import java.util.Date;
import java.util.Collection;
import edu.co.sena.dao.InventarioDao;
import edu.co.sena.dto.Inventario;
import edu.co.sena.exceptions.InventarioDaoException;
import edu.co.sena.factory.InventarioDaoFactory;

public class InventarioDaoSample
{
	/**
	 * Method 'main'
	 * 
	 * @param arg
	 * @throws Exception
	 */
	public static void main(String[] arg) throws Exception
	{
		// Uncomment one of the lines below to test the generated code
		
		// findAll();
		// findByProducto("");
		// findByProveedor("", "");
		// findWhereIdInventarioEquals(0);
		// findWhereCantidadEquals(0);
		// findWhereProveedorTipoDocumentoEquals("");
		// findWhereProveedorNumeroDocumentoEquals("");
		// findWhereProductoIdProductoEquals("");
	}

	/**
	 * Method 'findAll'
	 * 
	 */
	public static void findAll()
	{
		try {
			InventarioDao _dao = getInventarioDao();
			Inventario _result[] = _dao.findAll();
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findByProducto'
	 * 
	 * @param productoIdProducto
	 */
	public static void findByProducto(String productoIdProducto)
	{
		try {
			InventarioDao _dao = getInventarioDao();
			Inventario _result[] = _dao.findByProducto(productoIdProducto);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findByProveedor'
	 * 
	 * @param proveedorTipoDocumento
	 * @param proveedorNumeroDocumento
	 */
	public static void findByProveedor(String proveedorTipoDocumento, String proveedorNumeroDocumento)
	{
		try {
			InventarioDao _dao = getInventarioDao();
			Inventario _result[] = _dao.findByProveedor(proveedorTipoDocumento, proveedorNumeroDocumento);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereIdInventarioEquals'
	 * 
	 * @param idInventario
	 */
	public static void findWhereIdInventarioEquals(int idInventario)
	{
		try {
			InventarioDao _dao = getInventarioDao();
			Inventario _result[] = _dao.findWhereIdInventarioEquals(idInventario);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereCantidadEquals'
	 * 
	 * @param cantidad
	 */
	public static void findWhereCantidadEquals(int cantidad)
	{
		try {
			InventarioDao _dao = getInventarioDao();
			Inventario _result[] = _dao.findWhereCantidadEquals(cantidad);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereProveedorTipoDocumentoEquals'
	 * 
	 * @param proveedorTipoDocumento
	 */
	public static void findWhereProveedorTipoDocumentoEquals(String proveedorTipoDocumento)
	{
		try {
			InventarioDao _dao = getInventarioDao();
			Inventario _result[] = _dao.findWhereProveedorTipoDocumentoEquals(proveedorTipoDocumento);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereProveedorNumeroDocumentoEquals'
	 * 
	 * @param proveedorNumeroDocumento
	 */
	public static void findWhereProveedorNumeroDocumentoEquals(String proveedorNumeroDocumento)
	{
		try {
			InventarioDao _dao = getInventarioDao();
			Inventario _result[] = _dao.findWhereProveedorNumeroDocumentoEquals(proveedorNumeroDocumento);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereProductoIdProductoEquals'
	 * 
	 * @param productoIdProducto
	 */
	public static void findWhereProductoIdProductoEquals(String productoIdProducto)
	{
		try {
			InventarioDao _dao = getInventarioDao();
			Inventario _result[] = _dao.findWhereProductoIdProductoEquals(productoIdProducto);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'getInventarioDao'
	 * 
	 * @return InventarioDao
	 */
	public static InventarioDao getInventarioDao()
	{
		return InventarioDaoFactory.create();
	}

	/**
	 * Method 'display'
	 * 
	 * @param dto
	 */
	public static void display(Inventario dto)
	{
		StringBuffer buf = new StringBuffer();
		buf.append( dto.getIdInventario() );
		buf.append( ", " );
		buf.append( dto.getCantidad() );
		buf.append( ", " );
		buf.append( dto.getProveedorTipoDocumento() );
		buf.append( ", " );
		buf.append( dto.getProveedorNumeroDocumento() );
		buf.append( ", " );
		buf.append( dto.getProductoIdProducto() );
		System.out.println( buf.toString() );
	}

}
